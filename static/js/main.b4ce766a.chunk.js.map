{"version":3,"sources":["assets/github-background.svg","styles/global.ts","pages/Dashboard/styles.ts","assets/logo.svg","services/api.ts","components/footer/styles.ts","components/footer/index.tsx","pages/Dashboard/index.tsx","pages/Explorer/styles.ts","pages/Explorer/index.tsx","Routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","githubBackground","Title","styled","h1","Form","form","Error","p","Repository","div","api","axios","create","baseURL","Footer","footer","CFooter","href","target","rel","Dashboard","useState","getBuscaRepo","setBuscaRepo","getRepositories","localStorage","getItem","JSON","parse","getApiRepo","setApiRepo","errorApi","setError","event","a","preventDefault","get","reponse","repository","data","useEffect","setItem","stringify","src","logoImg","alt","width","onSubmit","type","placeholder","onChange","e","value","map","to","full_name","owner","avatar_url","description","size","Header","header","RepositoryInfo","RepositoryLista","Explorer","repo","setRepo","issues","setIssues","params","useRouteMatch","then","response","stargazers_count","forks_count","open_issues_count","html_url","title","user","login","id","Rotas","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4ce766a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github-background.7fa45dda.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport githubBackground from '../assets/github-background.svg';\n\nexport default createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        outline: 0;\n        box-sizing: border-box;\n    }\n\n    body { \n        background-image: url(${githubBackground});\n        background-repeat: no-repeat;\n        background-position: 70% top;\n        background-color: #F0F0F5;\n    }\n\n    body, input, button {\n        font: 16px Roboto, sans-serif;\n    }\n\n    #root {\n        max-width: 960px;\n        margin: 0 auto;\n        padding-top: 20px;\n        padding-bottom: 20px;\n        padding-left: 10px;\n        padding-right: 10px;\n\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n\n        \n        height: 100vh;\n    }\n\n    button {\n        cursor: pointer;\n    }\n\n`;","import styled from 'styled-components'\n\nexport const Title = styled.h1`\n    font-size: 48px;\n    color: #3A3A3A;\n\n    margin-top: 40px;\n`;\n\nexport const Form = styled.form`\n    margin-top: 30px;\n    max-width: 700px;\n    \n    display: flex;\n\n    input { \n        flex: 1;\n        padding: 22px;\n        background-color: #fff;\n        border: 0px;\n        width: 60%;  \n    }\n\n    button { \n        padding: 22px;\n        border: 0px;\n\n        background-color: #2b9348;\n        color: #fff;\n\n        &:hover {\n            background-color: #55a630;\n        }\n    }`;\n\nexport const Error = styled.p`\n        margin-top: 20px;\n        color: #e63946;\n `   \n\nexport const Repository = styled.div`\n    margin-top: 40px;\n    max-width: 700px;\n\n    a {\n        background-color: #ffffff;\n        border-radius: 5px;\n        padding: 15px;\n        display: block;\n        display: flex;\n\n        align-items: center;\n        text-decoration: none;\n\n        &:hover {\n            transform: translateX(10px);\n        }\n\n        & + a {\n            margin-top: 10px;\n        }\n     }\n\n    img {\n        width: 70px;\n        border-radius: 50%;\n    }\n\n    div {\n        margin-left: 20px;\n    }\n\n    strong {\n        color: #000;\n    }\n\n    p {\n        margin-top: 5px;\n        color: #6c757d;\n    }\n\n    svg {\n        margin-left: auto;\n        color: #CBCBD6;\n    }\n`\n","export default __webpack_public_path__ + \"static/media/logo.469cc31b.svg\";","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://api.github.com/'\n})\n\nexport default api;","import styled from 'styled-components';\n\nexport const Footer = styled.footer`\n    display: flex;\n    height: 50px;\n    align-items: center;\n;    \n\n    p {\n        color: #343a40;\n    }\n    \n` ","import React from 'react';\nimport { Footer } from './styles';\n\n\nconst CFooter: React.FC = () => {\n    return (\n        <>\n        <Footer>\n                <p>Desenvolvido por Denis Souza - <a href=\"https://www.linkedin.com/in/denis-souzaa/\" target=\"_blank\" rel=\"noreferrer\">LinkedIn</a>.</p>\n            </Footer>\n        </>\n    )\n}\n\nexport default CFooter;","import React, { useState, FormEvent, useEffect } from 'react';\n\n//plugins\nimport { IoChevronForwardOutline } from 'react-icons/io5';\nimport { Link } from 'react-router-dom';\n//styles\nimport { Title, Form, Repository, Error} from './styles';\n//images\nimport logoImg from '../../assets/logo.svg';\n\n//services\nimport api from '../../services/api';\n\nimport CFooter from '../../components/footer/';\n\ninterface Repository {\n    full_name: string,\n    description: string,\n    owner: {\n        long: string\n        avatar_url: string\n    }\n}\n\nconst Dashboard: React.FC = () => {\n    const [getBuscaRepo, setBuscaRepo] = useState('');\n    const [getApiRepo, setApiRepo] = useState<Repository[]>(() => {\n        const getRepositories = localStorage.getItem('@GithubExplorer/repositories')\n\n        if(getRepositories){\n            return JSON.parse(getRepositories)\n        } else {\n            return []\n        }\n    });\n    const [errorApi, setError] = useState('');\n\n    useEffect(() => {\n        localStorage.setItem(\"@GithubExplorer/repositories\", JSON.stringify(getApiRepo),);\n    },[getApiRepo]) \n\n    async function handleAddRepository(event: FormEvent<HTMLFormElement>) {\n        //capturar dados do form\n        //consumir api\n        //atualizar estado\n        event.preventDefault();\n\n        if(!getBuscaRepo){\n            setError('Digite o autor/nome repositório');\n            return\n        }\n\n        try {\n            const reponse = await api.get<Repository>(`repos/${getBuscaRepo}`);\n            const repository = reponse.data;\n            setApiRepo([...getApiRepo, repository]);\n\n            setError('');\n        } catch (error) {\n            setError('Algo deu errado digite o autor/nome repositório corretamente');\n        }\n    }\n\n    return (\n        <>\n            <div><img src={logoImg} alt=\"GitHub Explorer\" width=\"215px\" />\n            <Title>Explore repositórios no Github</Title>\n\n            <Form onSubmit={handleAddRepository}>\n                <input type=\"text\" placeholder=\"Insira 'nome usuario/repositorio', exemplo: denissouzaa/gitexplorer\" onChange={e => setBuscaRepo(e.target.value)} value={getBuscaRepo} />\n                <button type=\"submit\">Pesquisar</button>\n            </Form>\n            <Error>{errorApi}</Error>\n            <Repository>\n                {getApiRepo.map(repository => (\n                    <Link key={repository.full_name} to={`/explorer/${repository.full_name}`}>\n                        <img src={repository.owner.avatar_url} alt=\"\" />\n                        <div>\n                            <strong>{repository.full_name}</strong>\n                            <p>{repository.description}</p>\n                        </div>\n                        <IoChevronForwardOutline size={20} />\n                    </Link>\n                ))}\n            </Repository></div>\n            <div>\n                <CFooter />\n            </div>\n            \n        \n        </>\n    )\n}\n\nexport default Dashboard;","import styled from 'styled-components';\n\nexport const Header = styled.header`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    a {\n        display: flex;\n        text-decoration: none;\n        align-items: center;\n        color: #495057;\n\n        &:visited {\n            color: #495057;\n        }\n\n        &:hover {\n            color: #666;\n        }\n\n        svg {\n            margin-right: 4px;\n        }\n    }\n`\n\nexport const RepositoryInfo = styled.div`\n    margin-top: 50px;\n    max-width: 700px;\n\n    header {\n        display: flex;\n        align-items: center;\n    }\n\n    img {\n        width: 70px;\n        border-radius: 50%;\n    }\n\n    div {\n        margin-left: 20px;\n    }\n\n    p {\n        margin-top: 5px;\n        color: #6c757d;\n    }\n\n    ul {\n        margin-top: 20px;\n        list-style: none;\n        display: flex;\n\n        li {\n            & + li {\n                margin-left: 80px;\n            }\n            strong {\n                display: block;\n                font-size: 30px;\n                color: #3d3d4d;\n            }\n            \n            span {\n                display: block;\n                margin-top: 4px;\n                color: #3d3d4d;\n            }\n        }\n\n    }\n\n`\n\nexport const RepositoryLista = styled.div`\n    margin-top: 50px;\n    max-width: 700px;\n\n    a {\n        background-color: #ffffff;\n        border-radius: 5px;\n        padding: 20px;\n        display: block;\n        display: flex;\n\n        align-items: center;\n        text-decoration: none;\n\n        &:hover {\n            transform: translateX(10px);\n        }\n\n        & + a {\n            margin-top: 10px;\n        }\n     }\n\n    div {\n        margin-left: 20px;\n    }\n\n    strong {\n        color: #212529;\n    }\n\n    p {\n        margin-top: 5px;\n        color: #6c757d;\n    }\n\n    svg {\n        margin-left: auto;\n        color: #CBCBD6;\n    }\n`\n\nexport const Footer = styled.footer`\n    bottom: 0px;\n    position: absolute;\n\n    p {\n        color: #343a40;\n    }\n    \n` \n","import React, { useEffect, useState } from 'react';\n\n//plugins \nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { IoCaretBackOutline, IoChevronForwardOutline } from 'react-icons/io5';\n//styles\nimport { Header, RepositoryInfo, RepositoryLista, Footer } from './styles';\n//images\nimport logoImg from '../../assets/logo.svg';\n//services\nimport api from '../../services/api';\n\nimport CFooter from '../../components/footer';\n\ninterface RepositoryParams {\n    repository: string;\n}\n\ninterface Repo {\n    full_name: string,\n    description: string,\n    stargazers_count: number,\n    forks_count: number,\n    open_issues_count: number,\n    owner: {\n        avatar_url: string,\n    }\n}\n\ninterface Issues {\n    id: number,\n    html_url: string,\n    title: string,\n    user: {\n        login: string,\n    }\n}\n\nconst Explorer: React.FC = () => {\n\n    const [repo, setRepo] = useState<Repo | null>(null);\n    const [issues, setIssues] = useState<Issues[]>([]);\n    const { params } = useRouteMatch<RepositoryParams>();\n\n    useEffect(() => {\n        api.get(`repos/${params.repository}`).then((response) => {\n            setRepo(response.data);\n        })\n        api.get(`repos/${params.repository}/issues`).then((response) => {\n            setIssues(response.data);\n        })\n    }, [params.repository])\n\n\n    return (\n        <> \n            <div>\n            <Header>\n                <img src={logoImg} alt=\"GitHub Explorer\" width=\"215px\" />\n                <Link to=\"../\">\n                    <IoCaretBackOutline size=\"20\" />\n                    Voltar\n                </Link>\n            </Header>\n            <RepositoryInfo>\n                <header>\n                    <img src={repo?.owner.avatar_url} alt=\"\" />\n                    <div>\n                        <strong>{params.repository}</strong>\n                        <p>{repo?.description}</p>\n                    </div>\n                </header>\n                <ul>\n                    <li>\n                        <strong>{repo?.stargazers_count}</strong>\n                        <span>Stars</span>\n                    </li>\n                    <li>\n                        <strong>{repo?.forks_count}</strong>\n                        <span>Forks</span>\n                    </li>\n                    <li>\n                        <strong>{repo?.open_issues_count}</strong>\n                        <span>Issues abertas</span>\n                    </li>\n                </ul>\n            </RepositoryInfo>\n\n            <RepositoryLista>\n                {issues.map(issues => (\n                    <a key={issues.id} href={issues.html_url} target=\"_blank\" rel=\"noreferrer\">\n                    <div>\n                        <strong>{issues.title}</strong>\n                        <p>{issues.user.login}</p>\n                    </div>\n                    <IoChevronForwardOutline size={20} />\n                </a>\n                ))}\n                \n            </RepositoryLista>\n            </div>\n            <div>\n                <CFooter />\n            </div>\n\n        \n\n        </>\n    )\n}\n\nexport default Explorer;","import React from 'react';\n\n//plugins\nimport { Switch, Route} from 'react-router-dom';\n\n//pages\nimport Dashboard from '../pages/Dashboard';\nimport Explorer from '../pages/Explorer';\n\nconst Rotas: React.FC = () => {\n    return(\n        <Switch>\n            <Route path=\"/explorer/:repository+\" component={Explorer} />\n            <Route path=\"/\" component={Dashboard} />\n        </Switch>\n    )\n}\n\nexport default Rotas;","import React from 'react';\n\n//styles \nimport GlobalStyle from './styles/global';\n//plugins \nimport { BrowserRouter as Router } from 'react-router-dom';\n//pages \nimport Rotas from './Routes';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Rotas />\n      </Router>\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}